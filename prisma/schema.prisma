// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fieldReference", "filteredRelationCount"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Org {
  orgCode                  String                     @id @db.VarChar(20)
  name                     String                     @db.VarChar(40)
  address                  String
  logoFileId               String?
  code                     String                     @db.VarChar(10)
  createdBy                String                     @db.VarChar(20)
  updatedBy                String                     @db.VarChar(20)
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @updatedAt
  deletedAt                DateTime?
  customerGroups           CustomerGroup[]
  customers                Customer[]
  vessels                  Vessel[]
  warehouse                Warehouse[]
  ports                    Port[]
  suppliers                Supplier[]
  trucks                   Truck[]
  users                    UserOrg[]
  products                 Product[]
  productCategories        ProductCategory[]
  inventories              Inventory[]
  salesOrders              SalesOrder[]
  salesOrderItems          SalesOrderItem[]
  salesOrderServices       SalesOrderService[]
  salesInvoices            SalesInvoice[]
  salesPayments            SalesPayment[]
  salesReturns             SalesReturn[]
  surchaseOrders           PurchaseOrder[]
  stockTransfers           StockTransfer[]
  productPackagings        ProductPackaging[]
  salesQuotes              SalesQuote[]
  goodsReleaseOrder        GoodsReleaseOrder[]
  purchaseReturn           PurchaseReturn[]
  purchasePayment          PurchasePayment[]
  purchaseReceipt          PurchaseReceipt[]
  files                    File[]
  InventoryMovement        InventoryMovement[]
  Unit                     Unit[]
  Service                  Service[]
  BankAccount              BankAccount[]
  ProductPrices            ProductPrices[]
  Currency                 Currency[]
  Tax                      Tax[]
  SalesQuoteItem           SalesQuoteItem[]
  SalesReturnItem          SalesReturnItem[]
  GoodsReleaseOrderItem    GoodsReleaseOrderItem[]
  SalesDelivery            SalesDelivery[]
  SalesDeliveryItem        SalesDeliveryItem[]
  VesselProduct            VesselProduct[]
  PurchasePaymentDetail    PurchasePaymentDetail[]
  SalesDeliveryItemDetail  SalesDeliveryItemDetail[]
  PurchaseInvoice          PurchaseInvoice[]
  PurchaseInvoiceItem      PurchaseInvoiceItem[]
  Area                     Area[]
  SalesPaymentDetail       SalesPaymentDetail[]
  PurchaseOrderItem        PurchaseOrderItem[]
  PurchaseReturnItem       PurchaseReturnItem[]
  StockTransferItem        StockTransferItem[]
  StockTransferReceipt     StockTransferReceipt[]
  StockTransferReceiptItem StockTransferReceiptItem[]
  PurchaseReceiptItem      PurchaseReceiptItem[]
  SKTD                     SKTD[]
  SKTDItem                 SKTDItem[]
  SKTDUsage                SKTDUsage[]
  SupplierCategory         SupplierCategory[]
  ProductGrade             ProductGrade[]
  Salesperson              Salesperson[]
  ProductType              ProductType[]
  Packaging                Packaging[]
  SalesInvoiceItem         SalesInvoiceItem[]
  SalesInvoiceService      SalesInvoiceService[]
  SalesDeliveryPrint       SalesDeliveryPrint[]
}

model User {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(40)
  username  String    @unique @db.VarChar(20)
  email     String    @unique @db.VarChar(40)
  password  String
  roleId    String
  role      Role      @relation(fields: [roleId], references: [roleId])
  createdBy String
  updatedBy String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  orgs      UserOrg[]
}

model UserOrg {
  user      User    @relation(fields: [userId], references: [id])
  org       Org     @relation(fields: [orgCode], references: [orgCode])
  userId    Int
  orgCode   String
  isDefault Boolean

  @@id([userId, orgCode])
}

model Role {
  roleId     String    @id @db.VarChar(20)
  name       String    @db.VarChar(40)
  permission String?
  createdBy  String    @db.VarChar(20)
  updatedBy  String    @db.VarChar(20)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  deletedAt  DateTime?
  users      User[]
}

model Permission {
  name       String @id
  permission String @unique
}

model CustomerGroup {
  customerGroupCode String     @db.VarChar(20)
  name              String     @db.VarChar(40)
  phone             String?    @db.VarChar(20)
  address           String?
  type              String?
  orgCode           String     @db.VarChar(20)
  org               Org        @relation(fields: [orgCode], references: [orgCode])
  createdBy         String     @db.VarChar(20)
  updatedBy         String     @db.VarChar(20)
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  deletedAt         DateTime?
  customer          Customer[]

  @@id([customerGroupCode, orgCode])
}

model Customer {
  customerCode      String            @db.VarChar(20)
  name              String            @db.VarChar(40)
  address           String?
  type              String?
  customerGroup     CustomerGroup?    @relation(fields: [customerGroupCode, orgCode], references: [customerGroupCode, orgCode])
  customerGroupCode String?
  contactEmail      String?
  NPWP              String?           @db.VarChar(40)
  NPWPAddress       String?           @db.VarChar(255)
  salespersonCode   String?           @db.VarChar(20)
  salesperson       Salesperson?      @relation(fields: [salespersonCode, orgCode], references: [salespersonCode, orgCode])
  top               Int
  orgCode           String
  org               Org               @relation(fields: [orgCode], references: [orgCode])
  createdBy         String            @db.VarChar(20)
  updatedBy         String            @db.VarChar(20)
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  deletedAt         DateTime?
  vessels           Vessel[]
  salesQuotes       SalesQuote[]
  salesOrders       SalesOrder[]
  productPrices     ProductPrices[]
  SKTD              SKTD[]
  CustomerContact   CustomerContact[]
  SalesInvoice      SalesInvoice[]
  SalesPayment      SalesPayment[]

  @@id([customerCode, orgCode])
}

model CustomerContact {
  contactName  String   @db.VarChar(20)
  phone        String   @db.VarChar(20)
  jobTitle     String   @db.VarChar(40)
  customer     Customer @relation(fields: [customerCode, orgCode], references: [customerCode, orgCode])
  customerCode String   @db.VarChar(20)
  orgCode      String

  @@id([contactName, customerCode, orgCode])
}

model Vessel {
  vesselCode   String          @db.VarChar(20)
  name         String          @db.VarChar(40)
  regNo        String          @db.VarChar(40)
  vesselType   String?         @db.VarChar(40)
  imoNumber    String?         @db.VarChar(40)
  teus         String?         @db.VarChar(40)
  customer     Customer        @relation(fields: [customerCode, orgCode], references: [customerCode, orgCode])
  customerCode String          @db.VarChar(20)
  isAllProduct Boolean?
  orgCode      String          @db.VarChar(20)
  org          Org             @relation(fields: [orgCode], references: [orgCode])
  createdBy    String          @db.VarChar(20)
  updatedBy    String          @db.VarChar(20)
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
  deletedAt    DateTime?
  products     VesselProduct[]
  salesQuotes  SalesQuote[]
  salesOrders  SalesOrder[]

  @@id([vesselCode, orgCode])
}

model VesselProduct {
  vesselCode  String  @db.VarChar(20)
  productCode String
  vessel      Vessel  @relation(fields: [vesselCode, orgCode], references: [vesselCode, orgCode])
  product     Product @relation(fields: [productCode, orgCode], references: [productCode, orgCode])
  orgCode     String
  org         Org     @relation(fields: [orgCode], references: [orgCode])

  @@id([vesselCode, productCode, orgCode])
}

model Truck {
  truckCode       String          @db.VarChar(20)
  policeNumber    String          @db.VarChar(10)
  name            String          @db.VarChar(40)
  type            String?         @db.VarChar(40)
  orgCode         String          @db.VarChar(20)
  org             Org             @relation(fields: [orgCode], references: [orgCode])
  createdBy       String          @db.VarChar(40)
  updatedBy       String          @db.VarChar(40)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  deletedAt       DateTime?
  salesDeliveries SalesDelivery[]
  StockTransfer   StockTransfer[]

  @@id([truckCode, orgCode])
}

model Warehouse {
  warehouseCode             String              @db.VarChar(20)
  name                      String              @db.VarChar(40)
  phone                     String?             @db.VarChar(20)
  address                   String?
  barcodeRequired           Boolean?
  areaCode                  String              @db.VarChar(20)
  area                      Area                @relation(fields: [areaCode, orgCode], references: [areaCode, orgCode])
  orgCode                   String              @db.VarChar(20)
  org                       Org                 @relation(fields: [orgCode], references: [orgCode])
  createdBy                 String              @db.VarChar(20)
  updatedBy                 String              @db.VarChar(20)
  createdAt                 DateTime            @default(now())
  updatedAt                 DateTime            @updatedAt
  deletedAt                 DateTime?
  inventories               Inventory[]
  salesQuote                SalesQuote[]
  salesOrder                SalesOrder[]
  purchaseOrders            PurchaseOrder[]
  stockTransferOrigins      StockTransfer[]     @relation("warehouseOrigin")
  stockTransferDestinations StockTransfer[]     @relation("warehouseDestination")
  GoodsReleaseOrder         GoodsReleaseOrder[]
  SalesDelivery             SalesDelivery[]
  PurchaseReceipt           PurchaseReceipt[]

  @@id([warehouseCode, orgCode])
}

model Area {
  areaCode   String      @db.VarChar(20)
  areaName   String      @db.VarChar(40)
  orgCode    String      @db.VarChar(20)
  org        Org         @relation(fields: [orgCode], references: [orgCode])
  createdBy  String      @db.VarChar(20)
  updatedBy  String      @db.VarChar(20)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  deletedAt  DateTime?
  Warehouses Warehouse[]

  @@id([areaCode, orgCode])
}

model Port {
  portCode      String          @db.VarChar(20)
  name          String          @db.VarChar(40)
  address       String?
  area          String
  orgCode       String          @db.VarChar(20)
  org           Org             @relation(fields: [orgCode], references: [orgCode])
  lat           Decimal?
  lng           Decimal?
  createdBy     String          @db.VarChar(20)
  updatedBy     String          @db.VarChar(20)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  deletedAt     DateTime?
  salesQuotes   SalesQuote[]
  salesOrders   SalesOrder[]
  productPrices ProductPrices[]

  @@id([portCode, orgCode])
}

model Supplier {
  supplierCode         String            @db.VarChar(20)
  name                 String            @db.VarChar(40)
  contactEmail         String?
  phone                String?           @db.VarChar(20)
  address              String?
  type                 String?
  top                  Int
  NPWP                 String?
  NPWPAddress          String?
  supplierCategoryCode String?           @db.VarChar(20)
  supplierCategory     SupplierCategory? @relation(fields: [supplierCategoryCode, orgCode], references: [supplierCategoryCode, orgCode])
  orgCode              String            @db.VarChar(20)
  org                  Org               @relation(fields: [orgCode], references: [orgCode])
  createdBy            String            @db.VarChar(20)
  updatedBy            String            @db.VarChar(20)
  createdAt            DateTime          @default(now())
  updatedAt            DateTime          @updatedAt
  deletedAt            DateTime?
  purchaseOrders       PurchaseOrder[]
  purchaseInvoice      PurchaseInvoice[]
  PurchasePayment      PurchasePayment[]

  @@id([supplierCode, orgCode])
}

model Salesperson {
  salespersonCode String     @db.VarChar(20)
  name            String     @db.VarChar(40)
  phone           String?
  email           String?    @db.VarChar(20)
  orgCode         String     @db.VarChar(20)
  org             Org        @relation(fields: [orgCode], references: [orgCode])
  createdBy       String     @db.VarChar(20)
  updatedBy       String     @db.VarChar(20)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  deletedAt       DateTime?
  customers       Customer[]

  @@id([salespersonCode, orgCode])
}

model SupplierCategory {
  supplierCategoryCode String     @db.VarChar(20)
  supplierCategoryName String     @db.VarChar(40)
  Supplier             Supplier[]
  createdBy            String     @db.VarChar(20)
  updatedBy            String     @db.VarChar(20)
  createdAt            DateTime   @default(now())
  updatedAt            DateTime   @updatedAt
  deletedAt            DateTime?
  org                  Org        @relation(fields: [orgCode], references: [orgCode])
  orgCode              String     @db.VarChar(20)

  @@id([supplierCategoryCode, orgCode])
}

model File {
  fileId          String      @default(uuid())
  filename        String
  fileSize        Float
  filePath        String
  mimetype        String
  ext             String
  url             String
  createdBy       String      @db.VarChar(20)
  updatedBy       String      @db.VarChar(20)
  orgCode         String      @db.VarChar(20)
  org             Org         @relation(fields: [orgCode], references: [orgCode])
  salesQuote      SalesQuote? @relation(fields: [salesQuoteDocNo, orgCode], references: [docNo, orgCode])
  salesQuoteDocNo String?
  salesOrder      SalesOrder? @relation(fields: [salesOrderDocNo, orgCode], references: [docNo, orgCode])
  salesOrderDocNo String?

  @@id([fileId, orgCode])
}

model Product {
  productCode           String
  name                  String                  @db.VarChar(40)
  desc                  String?                 @db.Text
  sku                   String?                 @db.VarChar(20)
  nptNumber             String?                 @db.VarChar(40)
  nptValidFrom          DateTime?               @db.Date
  nptValidTo            DateTime?               @db.Date
  unitPrice             Decimal                 @db.Decimal(15, 2)
  productGrade          ProductGrade            @relation(fields: [productGradeCode, orgCode], references: [productGradeCode, orgCode])
  productGradeCode      String                  @db.VarChar(10)
  productTypeCode       String?                 @db.VarChar(20)
  productType           ProductType?            @relation(fields: [productTypeCode, orgCode], references: [productTypeCode, orgCode])
  productCategoryCode   String                  @db.VarChar(20)
  productCategory       ProductCategory         @relation(fields: [productCategoryCode, orgCode], references: [productCategoryCode, orgCode])
  createdBy             String                  @db.VarChar(20)
  updatedBy             String                  @db.VarChar(20)
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  deletedAt             DateTime?
  orgCode               String                  @db.VarChar(20)
  org                   Org                     @relation(fields: [orgCode], references: [orgCode])
  vessels               VesselProduct[]
  packagings            ProductPackaging[]
  productPrices         ProductPrices[]
  SKTDItems             SKTDItem[]
  GoodsReleaseOrderItem GoodsReleaseOrderItem[]
  SalesOrderItem        SalesOrderItem[]
  SalesQuoteItem        SalesQuoteItem[]
  SalesInvoiceItem      SalesInvoiceItem[]
  PurchaseOrderItem     PurchaseOrderItem[]
  Inventory             Inventory[]
  StockTransferItem     StockTransferItem[]
  PurchaseReceiptItem   PurchaseReceiptItem[]
  PurchaseInvoiceItem   PurchaseInvoiceItem[]

  @@id([productCode, orgCode])
}

model ProductGrade {
  productGradeCode String    @db.VarChar(10)
  name             String    @db.VarChar(40)
  orgCode          String    @db.VarChar(20)
  org              Org       @relation(fields: [orgCode], references: [orgCode])
  Product          Product[]
  createdBy        String    @db.VarChar(20)
  updatedBy        String    @db.VarChar(20)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  deletedAt        DateTime?

  @@id([productGradeCode, orgCode])
}

model ProductPackaging {
  productCode           String
  packagingCode         String                  @db.VarChar(10)
  packaging             Packaging               @relation(fields: [packagingCode, orgCode], references: [packagingCode, orgCode])
  orgCode               String                  @db.VarChar(20)
  org                   Org                     @relation(fields: [orgCode], references: [orgCode])
  product               Product                 @relation(fields: [productCode, orgCode], references: [productCode, orgCode])
  unitCode              String                  @db.VarChar(10)
  unit                  Unit                    @relation(fields: [unitCode, orgCode], references: [unitCode, orgCode])
  unitQty               Decimal                 @db.Decimal(15, 2)
  unitPrice             Decimal?                @db.Decimal(15, 2)
  createdBy             String                  @db.VarChar(20)
  updatedBy             String                  @db.VarChar(20)
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  deletedAt             DateTime?
  inventories           Inventory[]
  salesOrderItems       SalesOrderItem[]
  purchaseOrderItems    PurchaseOrderItem[]
  salesQuoteItems       SalesQuoteItem[]
  goodsReleaseOrderItem GoodsReleaseOrderItem[]
  salesDeliveryItem     SalesDeliveryItem[]
  stockTransferItems    StockTransferItem[]
  inventoryMovements    InventoryMovement[]
  SalesInvoiceItem      SalesInvoiceItem[]

  @@id([productCode, packagingCode, orgCode])
}

model Packaging {
  packagingCode       String                @db.VarChar(10)
  name                String                @db.VarChar(20)
  orgCode             String                @db.VarChar(20)
  org                 Org                   @relation(fields: [orgCode], references: [orgCode])
  createdBy           String                @db.VarChar(20)
  updatedBy           String                @db.VarChar(20)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  deletedAt           DateTime?
  ProductPackaging    ProductPackaging[]
  SalesOrderItem      SalesOrderItem[]
  SalesQuoteItem      SalesQuoteItem[]
  SalesInvoiceItem    SalesInvoiceItem[]
  PurchaseReceiptItem PurchaseReceiptItem[]
  PurchaseInvoiceItem PurchaseInvoiceItem[]

  @@id([packagingCode, orgCode])
}

model Unit {
  unitCode            String                @db.VarChar(10)
  unitName            String                @db.VarChar(20)
  orgCode             String                @db.VarChar(20)
  org                 Org                   @relation(fields: [orgCode], references: [orgCode])
  createdBy           String                @db.VarChar(20)
  updatedBy           String                @db.VarChar(20)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  deletedAt           DateTime?
  ProductPackaging    ProductPackaging[]
  SalesQuoteItem      SalesQuoteItem[]
  SalesOrderItem      SalesOrderItem[]
  PurchaseOrderItem   PurchaseOrderItem[]
  PurchaseReceiptItem PurchaseReceiptItem[]

  @@id([unitCode, orgCode])
}

model Service {
  serviceCode         String                @db.VarChar(20)
  name                String                @db.VarChar(40)
  unitPrice           Decimal               @db.Decimal(15, 2)
  currency            Currency              @relation(fields: [currencyCode, orgCode], references: [currencyCode, orgCode])
  currencyCode        String                @db.VarChar(3)
  orgCode             String                @db.VarChar(20)
  org                 Org                   @relation(fields: [orgCode], references: [orgCode])
  salesQuoteServices  SalesQuoteService[]
  salesOrderServices  SalesOrderService[]
  createdBy           String                @db.VarChar(20)
  updatedBy           String                @db.VarChar(20)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  deletedAt           DateTime?
  SalesInvoiceService SalesInvoiceService[]

  @@id([serviceCode, orgCode])
}

model BankAccount {
  bankAccountCode   String         @db.VarChar(20)
  bankAccountNumber String         @db.VarChar(20)
  bankAccountName   String         @db.VarChar(40)
  bankName          String         @db.VarChar(40)
  currency          Currency       @relation(fields: [currencyCode, orgCode], references: [currencyCode, orgCode])
  currencyCode      String         @db.VarChar(3)
  orgCode           String         @db.VarChar(20)
  org               Org            @relation(fields: [orgCode], references: [orgCode])
  createdBy         String         @db.VarChar(20)
  updatedBy         String         @db.VarChar(20)
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
  deletedAt         DateTime?
  SalesInvoice      SalesInvoice[]

  @@id([bankAccountCode, orgCode])
}

model ProductPrices {
  productCode  String
  product      Product   @relation(fields: [productCode, orgCode], references: [productCode, orgCode])
  portCode     String    @db.VarChar(10)
  port         Port      @relation(fields: [portCode, orgCode], references: [portCode, orgCode])
  customerCode String    @db.VarChar(20)
  customer     Customer  @relation(fields: [customerCode, orgCode], references: [customerCode, orgCode])
  unitPrice    Decimal   @db.Decimal(15, 2)
  currencyCode String    @db.VarChar(3)
  currency     Currency  @relation(fields: [currencyCode, orgCode], references: [currencyCode, orgCode])
  orgCode      String    @db.VarChar(20)
  org          Org       @relation(fields: [orgCode], references: [orgCode])
  createdBy    String    @db.VarChar(20)
  updatedBy    String    @db.VarChar(20)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  deletedAt    DateTime?

  @@id([productCode, orgCode, portCode, customerCode])
}

model Currency {
  currencyCode    String            @db.VarChar(3)
  name            String            @db.VarChar(40)
  rateIdr         Decimal           @db.Decimal(15, 2)
  orgCode         String            @db.VarChar(20)
  org             Org               @relation(fields: [orgCode], references: [orgCode])
  productPrice    ProductPrices[]
  services        Service[]
  salesQuotes     SalesQuote[]
  salesOrders     SalesOrder[]
  createdBy       String            @db.VarChar(20)
  updatedBy       String            @db.VarChar(20)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  deletedAt       DateTime?
  BankAccount     BankAccount[]
  SalesInvoice    SalesInvoice[]
  SalesPayment    SalesPayment[]
  PurchaseOrder   PurchaseOrder[]
  PurchasePayment PurchasePayment[]

  @@id([currencyCode, orgCode])
}

model Tax {
  taxCode    String       @db.VarChar(10)
  name       String       @db.VarChar(40)
  taxRate    Float
  isDefault  Boolean      @default(false)
  orgCode    String       @db.VarChar(20)
  org        Org          @relation(fields: [orgCode], references: [orgCode])
  createdBy  String       @db.VarChar(20)
  updatedBy  String       @db.VarChar(20)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  deletedAt  DateTime?
  SalesOrder SalesOrder[]
  SalesQuote SalesQuote[]

  @@id([taxCode, orgCode])
}

model ProductType {
  productTypeCode String    @db.VarChar(20)
  name            String    @db.VarChar(40)
  orgCode         String    @db.VarChar(20)
  org             Org       @relation(fields: [orgCode], references: [orgCode])
  createdBy       String    @db.VarChar(20)
  updatedBy       String    @db.VarChar(20)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  deletedAt       DateTime?
  Product         Product[]

  @@id([productTypeCode, orgCode])
}

model ProductCategory {
  productCategoryCode String    @db.VarChar(20)
  name                String    @db.VarChar(40)
  products            Product[]
  orgCode             String    @db.VarChar(20)
  org                 Org       @relation(fields: [orgCode], references: [orgCode])
  createdBy           String    @db.VarChar(20)
  updatedBy           String    @db.VarChar(20)
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  deletedAt           DateTime?

  @@id([productCategoryCode, orgCode])
}

model Inventory {
  productCode      String
  product          Product          @relation(fields: [productCode, orgCode], references: [productCode, orgCode])
  packagingCode    String           @db.VarChar(10)
  productPackaging ProductPackaging @relation(fields: [productCode, packagingCode, orgCode], references: [productCode, packagingCode, orgCode])
  orgCode          String           @db.VarChar(20)
  org              Org              @relation(fields: [orgCode], references: [orgCode])
  minStock         Decimal          @db.Decimal(15, 2)
  qtyOnHand        Decimal          @default(0) @db.Decimal(15, 2)
  qtyReserved      Decimal          @default(0) @db.Decimal(15, 2)
  warehouseCode    String           @db.VarChar(20)
  warehouse        Warehouse        @relation(fields: [warehouseCode, orgCode], references: [warehouseCode, orgCode])
  createdBy        String           @db.VarChar(20)
  updatedBy        String           @db.VarChar(20)
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  deletedAt        DateTime?

  @@id([productCode, packagingCode, warehouseCode, orgCode])
}

model InventoryMovement {
  productCode      String
  packagingCode    String           @db.VarChar(10)
  productPackaging ProductPackaging @relation(fields: [productCode, packagingCode, orgCode], references: [productCode, packagingCode, orgCode])
  qty              Decimal          @db.Decimal(15, 2)
  docType          DocType
  docNo            String           @db.VarChar(20)
  orgCode          String           @db.VarChar(20)
  org              Org              @relation(fields: [orgCode], references: [orgCode])
  createdAt        DateTime         @default(now())

  @@id([productCode, packagingCode, docType, orgCode])
}

model SalesQuote {
  docNo              String              @db.VarChar(40)
  orgCode            String              @db.VarChar(20)
  org                Org                 @relation(fields: [orgCode], references: [orgCode])
  customerCode       String              @db.VarChar(20)
  customer           Customer            @relation(fields: [customerCode, orgCode], references: [customerCode, orgCode])
  currencyCode       String              @db.VarChar(3)
  currency           Currency            @relation(fields: [currencyCode, orgCode], references: [currencyCode, orgCode])
  exchangeRate       Decimal             @db.Decimal(15, 2)
  port               Port                @relation(fields: [portCode, orgCode], references: [portCode, orgCode])
  portCode           String              @db.VarChar(10)
  date               DateTime            @db.Date
  validUntil         DateTime            @db.Date
  vesselCode         String              @db.VarChar(20)
  vessel             Vessel              @relation(fields: [vesselCode, orgCode], references: [vesselCode, orgCode])
  warehouseCode      String              @db.VarChar(20)
  warehouse          Warehouse           @relation(fields: [warehouseCode, orgCode], references: [warehouseCode, orgCode])
  shipTo             String              @db.Text
  totalProduct       Decimal             @db.Decimal(15, 2)
  totalService       Decimal             @db.Decimal(15, 2)
  taxAmount          Decimal?            @db.Decimal(15, 2)
  taxRate            Float
  taxCode            String?             @db.VarChar(10)
  tax                Tax?                @relation(fields: [taxCode, orgCode], references: [taxCode, orgCode])
  totalBeforeTax     Decimal             @db.Decimal(15, 2)
  totalAmount        Decimal             @db.Decimal(15, 2)
  docType            DocType?
  status             SalesQuoteStatus
  memo               String?             @db.Text
  cancelledAt        DateTime?
  cancelledBy        String?             @db.VarChar(20)
  createdBy          String              @db.VarChar(20)
  updatedBy          String              @db.VarChar(20)
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  salesQuoteItems    SalesQuoteItem[]
  salesQuoteServices SalesQuoteService[]
  attachments        File[]
  SalesOrder         SalesOrder[]

  @@id([docNo, orgCode])
}

enum DocType {
  SalesQuote
  SalesOrder
  GoodsRelease
  SalesDelivery
  SalesPayment
  SalesReturn
  PurchaseOrder
  PurchaseReceipt
  PurchasePayment
  PurchaseReturn
  InventoryAdjustment
  StockTransfer
}

enum MovementType {
  SalesQuote
  SalesOrder
  GoodsRelease
  Purchase
}

enum SalesQuoteStatus {
  Open
  Completed
  Cancelled
}

model SalesQuoteItem {
  docNo            String           @db.VarChar(40)
  lineNo           Int
  salesQuote       SalesQuote       @relation(fields: [docNo, orgCode], references: [docNo, orgCode])
  productCode      String
  product          Product          @relation(fields: [productCode, orgCode], references: [productCode, orgCode])
  packagingCode    String           @db.VarChar(10)
  packaging        Packaging        @relation(fields: [packagingCode, orgCode], references: [packagingCode, orgCode])
  productPackaging ProductPackaging @relation(fields: [productCode, packagingCode, orgCode], references: [productCode, packagingCode, orgCode])
  desc             String?
  qty              Decimal          @db.Decimal(15, 2)
  unitQty          Decimal          @db.Decimal(15, 2)
  totalUnitQty     Decimal          @db.Decimal(15, 2)
  unitCode         String           @db.VarChar(10)
  unit             Unit             @relation(fields: [unitCode, orgCode], references: [unitCode, orgCode])
  unitPrice        Decimal          @db.Decimal(15, 2)
  amount           Decimal          @db.Decimal(15, 2)
  salesOrder       SalesOrder?      @relation(fields: [salesOrderDocNo, orgCode], references: [docNo, orgCode])
  salesOrderDocNo  String?          @db.VarChar(40)
  orgCode          String           @db.VarChar(20)
  org              Org              @relation(fields: [orgCode], references: [orgCode])

  @@id([docNo, lineNo, orgCode])
}

model SalesQuoteService {
  orgCode         String      @db.VarChar(20)
  docNo           String      @db.VarChar(40)
  salesQuote      SalesQuote  @relation(fields: [docNo, orgCode], references: [docNo, orgCode])
  serviceCode     String      @db.VarChar(20)
  service         Service     @relation(fields: [serviceCode, orgCode], references: [serviceCode, orgCode])
  unitPrice       Decimal     @db.Decimal(15, 2)
  amount          Decimal     @db.Decimal(15, 2)
  desc            String?
  salesOrder      SalesOrder? @relation(fields: [salesOrderDocNo, orgCode], references: [docNo, orgCode])
  salesOrderDocNo String?     @db.VarChar(40)

  @@id([docNo, orgCode])
}

model SalesOrder {
  docNo              String              @db.VarChar(40)
  orgCode            String              @db.VarChar(20)
  org                Org                 @relation(fields: [orgCode], references: [orgCode])
  customerCode       String              @db.VarChar(20)
  customer           Customer            @relation(fields: [customerCode, orgCode], references: [customerCode, orgCode])
  currencyCode       String              @db.VarChar(3)
  currency           Currency            @relation(fields: [currencyCode, orgCode], references: [currencyCode, orgCode])
  port               Port                @relation(fields: [portCode, orgCode], references: [portCode, orgCode])
  portCode           String              @db.VarChar(10)
  poNumber           String?             @db.VarChar(40)
  poDate             DateTime?           @db.Date
  poNotes            String?             @db.Text
  date               DateTime            @db.Date
  dueDate            DateTime            @db.Date
  vesselCode         String              @db.VarChar(20)
  vessel             Vessel              @relation(fields: [vesselCode, orgCode], references: [vesselCode, orgCode])
  warehouseCode      String              @db.VarChar(20)
  warehouse          Warehouse           @relation(fields: [warehouseCode, orgCode], references: [warehouseCode, orgCode])
  shipTo             String              @db.Text
  totalProduct       Decimal             @db.Decimal(15, 2)
  totalService       Decimal             @db.Decimal(15, 2)
  taxAmount          Decimal             @db.Decimal(15, 2)
  taxCode            String              @db.VarChar(10)
  tax                Tax                 @relation(fields: [taxCode, orgCode], references: [taxCode, orgCode])
  taxRate            Float
  totalAmount        Decimal?            @default(0) @db.Decimal(15, 2)
  exchangeRate       Decimal             @db.Decimal(15, 2)
  totalBeforeTax     Decimal             @db.Decimal(15, 2)
  isSKTD             Boolean
  status             SalesOrderStatus
  memo               String?             @db.Text
  cancelledAt        DateTime?
  cancelledBy        String?             @db.VarChar(20)
  createdBy          String              @db.VarChar(20)
  updatedBy          String              @db.VarChar(20)
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  salesQuoteDocNo    String?             @db.VarChar(40)
  salesQuote         SalesQuote?         @relation(fields: [salesQuoteDocNo, orgCode], references: [docNo, orgCode])
  salesQuoteItems    SalesQuoteItem[]
  salesQuoteServices SalesQuoteService[]
  attachments        File[]
  salesOrderItems    SalesOrderItem[]
  salesOrderServices SalesOrderService[]
  salesReturns       SalesReturn[]
  goodsReleaseOrders GoodsReleaseOrder[]
  salesDeliveries    SalesDelivery[]
  salesInvoices      SalesInvoice[]

  @@id([docNo, orgCode])
}

model SalesOrderItem {
  docNo                  String                  @db.VarChar(40)
  lineNo                 Int
  productCode            String
  packagingCode          String                  @db.VarChar(10)
  packaging              Packaging               @relation(fields: [packagingCode, orgCode], references: [packagingCode, orgCode])
  product                Product                 @relation(fields: [productCode, orgCode], references: [productCode, orgCode])
  productPackaging       ProductPackaging        @relation(fields: [productCode, packagingCode, orgCode], references: [productCode, packagingCode, orgCode])
  qty                    Decimal                 @db.Decimal(15, 2)
  unitPrice              Decimal                 @db.Decimal(15, 2)
  unitQty                Decimal                 @db.Decimal(15, 2)
  totalUnitQty           Decimal                 @db.Decimal(15, 2)
  amount                 Decimal                 @db.Decimal(15, 2)
  unitCode               String                  @db.VarChar(10)
  unit                   Unit                    @relation(fields: [unitCode, orgCode], references: [unitCode, orgCode])
  desc                   String?
  salesOrder             SalesOrder              @relation(fields: [docNo, orgCode], references: [docNo, orgCode])
  orgCode                String                  @db.VarChar(20)
  org                    Org                     @relation(fields: [orgCode], references: [orgCode])
  salesReturnItems       SalesReturnItem[]
  goodsReleaseOrderItems GoodsReleaseOrderItem[]
  SKTDUsage              SKTDUsage[]
  SalesDeliveryItem      SalesDeliveryItem[]
  SalesInvoiceItem       SalesInvoiceItem[]

  @@id([docNo, lineNo, orgCode])
}

model SalesOrderService {
  docNo               String                @db.VarChar(40)
  serviceCode         String                @db.VarChar(20)
  service             Service               @relation(fields: [serviceCode, orgCode], references: [serviceCode, orgCode])
  unitPrice           Decimal               @db.Decimal(15, 2)
  amount              Decimal               @db.Decimal(15, 2)
  desc                String?
  salesOrder          SalesOrder            @relation(fields: [docNo, orgCode], references: [docNo, orgCode])
  orgCode             String                @db.VarChar(20)
  org                 Org                   @relation(fields: [orgCode], references: [orgCode])
  SalesInvoiceService SalesInvoiceService[]

  @@id([docNo, serviceCode, orgCode])
}

enum SalesOrderStatus {
  Open
  Partial
  OnProgress
  Completed
  Cancelled
}

model GoodsReleaseOrder {
  docNo                  String                  @db.VarChar(40)
  salesOrder             SalesOrder              @relation(fields: [salesOrderDocNo, orgCode], references: [docNo, orgCode])
  salesOrderDocNo        String                  @db.VarChar(40)
  deliveryDate           DateTime                @db.Date
  orgCode                String                  @db.VarChar(20)
  warehouseCode          String                  @db.VarChar(20)
  warehouse              Warehouse               @relation(fields: [warehouseCode, orgCode], references: [warehouseCode, orgCode])
  memo                   String                  @db.Text
  status                 GoodsReleaseStatus
  org                    Org                     @relation(fields: [orgCode], references: [orgCode])
  goodsReleaseOrderItems GoodsReleaseOrderItem[]
  cancelledAt            DateTime?
  cancelledBy            String?
  createdBy              String                  @db.VarChar(20)
  updatedBy              String                  @db.VarChar(20)
  createdAt              DateTime                @default(now())
  updatedAt              DateTime                @updatedAt
  SalesDelivery          SalesDelivery?

  @@id([docNo, orgCode])
}

model GoodsReleaseOrderItem {
  docNo                String            @db.VarChar(40)
  lineNo               Int
  goodsReleaseOrder    GoodsReleaseOrder @relation(fields: [docNo, orgCode], references: [docNo, orgCode])
  productCode          String
  product              Product           @relation(fields: [productCode, orgCode], references: [productCode, orgCode])
  packagingCode        String            @db.VarChar(10)
  productPackaging     ProductPackaging  @relation(fields: [productCode, packagingCode, orgCode], references: [productCode, packagingCode, orgCode])
  desc                 String?
  unitQty              Decimal           @db.Decimal(15, 2)
  totalUnitQty         Decimal           @db.Decimal(15, 2)
  unitCode             String            @db.VarChar(10)
  qty                  Decimal           @db.Decimal(15, 2)
  salesOrderItem       SalesOrderItem    @relation(fields: [salesOrderItemDocNo, salesOrderItemLineNo, orgCode], references: [docNo, lineNo, orgCode])
  salesOrderItemDocNo  String            @db.VarChar(40)
  salesOrderItemLineNo Int
  orgCode              String            @db.VarChar(20)
  org                  Org               @relation(fields: [orgCode], references: [orgCode])

  @@id([docNo, lineNo, orgCode])
}

enum GoodsReleaseStatus {
  Open
  Completed
  Cancelled
}

model SalesDelivery {
  docNo                  String              @db.VarChar(20)
  goodsReleaseOrderDocNo String              @db.VarChar(20)
  goodsReleaseOrder      GoodsReleaseOrder   @relation(fields: [goodsReleaseOrderDocNo, orgCode], references: [docNo, orgCode])
  salesOrderDocNo        String              @db.VarChar(40)
  salesOrder             SalesOrder          @relation(fields: [salesOrderDocNo, orgCode], references: [docNo, orgCode])
  warehouseCode          String              @db.VarChar(20)
  warehouse              Warehouse           @relation(fields: [warehouseCode, orgCode], references: [warehouseCode, orgCode])
  date                   DateTime            @db.Date
  deliveryDate           DateTime            @db.Date
  truck                  Truck               @relation(fields: [truckCode, orgCode], references: [truckCode, orgCode])
  truckCode              String              @db.VarChar(20)
  driverName             String              @db.VarChar(40)
  status                 SalesDeliveryStatus
  salesInvoice           SalesInvoice?
  salesDeliveryItems     SalesDeliveryItem[]
  printDate              Boolean             @default(true)
  memo                   String?
  orgCode                String
  org                    Org                 @relation(fields: [orgCode], references: [orgCode])
  cancelledAt            DateTime?
  cancelledBy            String?             @db.VarChar(20)
  createdBy              String              @db.VarChar(20)
  updatedBy              String              @db.VarChar(20)
  createdAt              DateTime            @default(now())
  updatedAt              DateTime            @updatedAt
  salesInvoiceDocNo      String?             @db.VarChar(40)
  salesInvoiceOrgCode    String?             @db.VarChar(20)

  @@id([docNo, orgCode])
  @@unique([goodsReleaseOrderDocNo, orgCode])
}

model SalesDeliveryPrint {
  docNo     String   @db.VarChar(20)
  orgCode   String   @db.VarChar(20)
  org       Org      @relation(fields: [orgCode], references: [orgCode])
  createdBy String   @db.VarChar(20)
  updatedBy String   @db.VarChar(20)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([docNo, orgCode, createdAt])
}

enum SalesDeliveryStatus {
  Open
  OnProgress
  Completed
  Cancelled
}

model SalesDeliveryItem {
  docNo                    String                    @db.VarChar(40)
  lineNo                   Int
  desc                     String?
  salesDelivery            SalesDelivery             @relation(fields: [docNo, orgCode], references: [docNo, orgCode])
  productPackaging         ProductPackaging          @relation(fields: [productCode, packagingCode, orgCode], references: [productCode, packagingCode, orgCode])
  productCode              String
  packagingCode            String                    @db.VarChar(10)
  qty                      Decimal                   @db.Decimal(15, 2)
  salesOrderItemLineNo     Int
  salesOrderItemDocNo      String                    @db.VarChar(40)
  salesOrderItem           SalesOrderItem            @relation(fields: [salesOrderItemDocNo, salesOrderItemLineNo, orgCode], references: [docNo, lineNo, orgCode])
  salesDeliveryItemDetails SalesDeliveryItemDetail[]
  orgCode                  String                    @db.VarChar(20)
  org                      Org                       @relation(fields: [orgCode], references: [orgCode])
  salesInvoiceItem         SalesInvoiceItem[]

  @@id([docNo, lineNo, orgCode])
}

//TODO: diisi nomor barcode yg sudah di scan
model SalesDeliveryItemDetail {
  barcode                  String
  // salesDeliveryItem SalesDeliveryItem @relation(fields: [docNo, lineNo, orgCode], references: [docNo, lineNo, orgCode])
  goodsReleaseOrderDocNo   String             @db.VarChar(40)
  productCode              String?
  packagingCode            String?            @db.VarChar(10)
  batchNo                  String?
  docNo                    String?            @db.VarChar(40)
  orgCode                  String             @db.VarChar(20)
  org                      Org                @relation(fields: [orgCode], references: [orgCode])
  SalesDeliveryItem        SalesDeliveryItem? @relation(fields: [salesDeliveryItemDocNo, salesDeliveryItemLineNo, salesDeliveryItemOrgCode], references: [docNo, lineNo, orgCode])
  salesDeliveryItemDocNo   String?            @db.VarChar(40)
  salesDeliveryItemLineNo  Int?
  salesDeliveryItemOrgCode String?            @db.VarChar(20)
  createdBy                String             @db.VarChar(20)
  updatedBy                String             @db.VarChar(20)
  createdAt                DateTime           @default(now())
  updatedAt                DateTime           @updatedAt

  @@id([barcode, goodsReleaseOrderDocNo, orgCode])
}

model SalesInvoice {
  docNo                String                @db.VarChar(40)
  orgCode              String                @db.VarChar(20)
  org                  Org                   @relation(fields: [orgCode], references: [orgCode])
  salesDelivery        SalesDelivery         @relation(fields: [salesDeliveryDocNo, orgCode], references: [docNo, orgCode])
  salesOrderDocNo      String                @db.VarChar(40)
  salesOrder           SalesOrder            @relation(fields: [salesOrderDocNo, orgCode], references: [docNo, orgCode])
  date                 DateTime              @db.Date
  customerCode         String                @db.VarChar(40)
  customer             Customer              @relation(fields: [customerCode, orgCode], references: [customerCode, orgCode])
  bankAccountCode      String?               @db.VarChar(20)
  bankAccount          BankAccount?          @relation(fields: [bankAccountCode, orgCode], references: [bankAccountCode, orgCode])
  dueDate              DateTime              @db.Date
  totalBeforeTax       Decimal               @db.Decimal(15, 2)
  currencyCode         String                @db.VarChar(3)
  currency             Currency              @relation(fields: [currencyCode, orgCode], references: [currencyCode, orgCode])
  exchangeRate         Decimal               @db.Decimal(15, 2)
  taxCode              String                @db.VarChar(10)
  taxRate              Float?                @default(0)
  taxAmount            Decimal?              @default(0) @db.Decimal(15, 2)
  withholdingTaxRate   Float?                @default(0)
  withholdingTaxAmount Decimal?              @default(0) @db.Decimal(15, 2)
  totalAmount          Decimal               @db.Decimal(15, 2)
  unpaidAmount         Decimal               @db.Decimal(15, 2)
  paidAmount           Decimal               @db.Decimal(15, 2)
  totalProduct         Decimal               @db.Decimal(15, 2)
  totalService         Decimal               @db.Decimal(15, 2)
  status               SalesInvoiceStatus
  memo                 String
  salesDeliveryDocNo   String                @db.VarChar(40)
  salesPaymentDetails  SalesPaymentDetail[]
  cancelledAt          DateTime?
  cancelledBy          String?               @db.VarChar(20)
  createdBy            String                @db.VarChar(20)
  updatedBy            String                @db.VarChar(20)
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
  salesInvoiceItems    SalesInvoiceItem[]
  salesInvoiceServices SalesInvoiceService[]

  @@id([docNo, orgCode])
  @@unique([salesDeliveryDocNo, orgCode])
}

model SalesInvoiceItem {
  docNo                   String             @db.VarChar(40)
  lineNo                  Int
  desc                    String?
  qty                     Decimal            @db.Decimal(15, 2)
  unitQty                 Decimal            @db.Decimal(15, 2)
  amount                  Decimal            @db.Decimal(15, 2)
  totalUnitQty            Decimal            @db.Decimal(15, 2)
  unitPrice               Decimal            @db.Decimal(15, 2)
  unitCode                String             @db.VarChar(10)
  product                 Product            @relation(fields: [productCode, orgCode], references: [productCode, orgCode])
  orgCode                 String             @db.VarChar(20)
  org                     Org                @relation(fields: [orgCode], references: [orgCode])
  productCode             String
  packagingCode           String             @db.VarChar(40)
  packaging               Packaging          @relation(fields: [packagingCode, orgCode], references: [packagingCode, orgCode])
  productPackaging        ProductPackaging   @relation(fields: [productCode, packagingCode, orgCode], references: [productCode, packagingCode, orgCode])
  salesDeliveryDocNo      String?            @db.VarChar(40)
  salesDeliveryItemLineNo Int?
  salesDeliveryItem       SalesDeliveryItem? @relation(fields: [salesDeliveryDocNo, salesDeliveryItemLineNo, orgCode], references: [docNo, lineNo, orgCode])
  salesOrderDocNo         String?            @db.VarChar(40)
  salesOrderItemLineNo    Int?
  salesOrderItem          SalesOrderItem?    @relation(fields: [salesOrderDocNo, salesOrderItemLineNo, orgCode], references: [docNo, lineNo, orgCode])
  salesInvoice            SalesInvoice       @relation(fields: [docNo, orgCode], references: [docNo, orgCode])

  @@id([docNo, lineNo, orgCode])
}

model SalesInvoiceService {
  docNo             String            @db.VarChar(40)
  serviceCode       String            @db.VarChar(40)
  service           Service           @relation(fields: [serviceCode, orgCode], references: [serviceCode, orgCode])
  desc              String?
  amount            Decimal           @db.Decimal(15, 2)
  unitPrice         Decimal           @db.Decimal(15, 2)
  orgCode           String            @db.VarChar(20)
  org               Org               @relation(fields: [orgCode], references: [orgCode])
  salesOrderDocNo   String            @db.VarChar(40)
  salesOrderService SalesOrderService @relation(fields: [salesOrderDocNo, serviceCode, orgCode], references: [docNo, serviceCode, orgCode])
  salesInvoice      SalesInvoice?     @relation(fields: [docNo, orgCode], references: [docNo, orgCode])

  @@id([docNo, serviceCode, orgCode])
}

enum SalesInvoiceStatus {
  Open
  Partial
  Paid
  Cancelled
}

model SalesPayment {
  docNo                String               @db.VarChar(40)
  refNo                String               @db.VarChar(40)
  date                 DateTime             @db.Date
  customerCode         String               @db.VarChar(40)
  customer             Customer             @relation(fields: [customerCode, orgCode], references: [customerCode, orgCode])
  currencyCode         String               @db.VarChar(3)
  currency             Currency             @relation(fields: [currencyCode, orgCode], references: [currencyCode, orgCode])
  exchangeRate         Decimal              @db.Decimal(15, 2)
  taxRate              Float?               @default(0)
  taxAmount            Decimal?             @default(0) @db.Decimal(15, 2)
  withholdingTaxRate   Float?               @default(0)
  withholdingTaxAmount Decimal?             @default(0) @db.Decimal(15, 2)
  memo                 String
  totalBeforeTax       Decimal              @db.Decimal(15, 2)
  totalAmount          Decimal              @db.Decimal(15, 2)
  orgCode              String               @db.VarChar(20)
  org                  Org                  @relation(fields: [orgCode], references: [orgCode])
  cancelledAt          DateTime?
  paymentMethod        String
  createdBy            String               @db.VarChar(20)
  updatedBy            String               @db.VarChar(20)
  createdAt            DateTime             @default(now())
  updatedAt            DateTime             @updatedAt
  deletedAt            DateTime?
  salesPaymentDetails  SalesPaymentDetail[]

  @@id([docNo, orgCode])
}

model PaymentMethod {
  paymentMethodCode String @id @db.VarChar(20)
  name              String
}

model SalesPaymentDetail {
  docNo             String       @db.VarChar(40)
  salesPayment      SalesPayment @relation(fields: [docNo, orgCode], references: [docNo, orgCode])
  salesInvoice      SalesInvoice @relation(fields: [salesInvoiceDocNo, orgCode], references: [docNo, orgCode])
  salesInvoiceDocNo String       @db.VarChar(40)
  amount            Decimal      @db.Decimal(15, 2)
  orgCode           String       @db.VarChar(20)
  org               Org          @relation(fields: [orgCode], references: [orgCode])

  @@id([docNo, salesInvoiceDocNo, orgCode])
}

model SalesReturn {
  docNo                String            @db.VarChar(40)
  orgCode              String            @db.VarChar(20)
  org                  Org               @relation(fields: [orgCode], references: [orgCode])
  date                 DateTime          @db.Date
  salesOrder           SalesOrder        @relation(fields: [salesOrderDocNo, orgCode], references: [docNo, orgCode])
  salesOrderDocNo      String            @db.VarChar(40)
  taxRate              Float?            @default(0)
  taxAmount            Decimal?          @default(0) @db.Decimal(15, 2)
  withholdingTaxRate   Float?            @default(0)
  withholdingTaxAmount Decimal?          @default(0) @db.Decimal(15, 2)
  totalBeforeTax       Decimal           @db.Decimal(15, 2)
  totalAmount          Decimal           @db.Decimal(15, 2)
  salesReturnItem      SalesReturnItem[]

  @@id([docNo, orgCode])
}

model SalesReturnItem {
  docNo                 String         @db.VarChar(40)
  lineNo                Int
  qty                   Decimal        @db.Decimal(15, 2)
  unitPrice             Decimal        @db.Decimal(15, 2)
  amount                Decimal        @db.Decimal(15, 2)
  notes                 String         @db.Text
  salesReturn           SalesReturn    @relation(fields: [docNo, orgCode], references: [docNo, orgCode])
  salesOrderItem        SalesOrderItem @relation(fields: [salesOrderItemDocNo, salesOrderItemlineNo, salesOrderItemOrgCode], references: [docNo, lineNo, orgCode])
  orgCode               String
  org                   Org            @relation(fields: [orgCode], references: [orgCode])
  salesOrderItemDocNo   String         @db.VarChar(40)
  salesOrderItemlineNo  Int
  salesOrderItemOrgCode String         @db.VarChar(20)

  @@id([docNo, lineNo, orgCode])
}

model PurchaseOrder {
  docNo              String              @db.VarChar(40)
  date               DateTime            @db.Date
  dueDate            DateTime            @db.Date
  orgCode            String              @db.VarChar(20)
  org                Org                 @relation(fields: [orgCode], references: [orgCode])
  supplier           Supplier            @relation(fields: [supplierCode, orgCode], references: [supplierCode, orgCode])
  supplierCode       String              @db.VarChar(20)
  shipTo             String
  warehouseCode      String              @db.VarChar(20)
  warehouse          Warehouse           @relation(fields: [warehouseCode, orgCode], references: [warehouseCode, orgCode])
  status             PurchaseOrderStatus
  currencyCode       String              @db.VarChar(3)
  currency           Currency            @relation(fields: [currencyCode, orgCode], references: [currencyCode, orgCode])
  exchangeRate       Decimal             @default(1) @db.Decimal(15, 2)
  memo               String?
  top                Int?
  totalProduct       Decimal             @db.Decimal(15, 2)
  totalService       Decimal             @db.Decimal(15, 2)
  taxRate            Float?              @default(0)
  taxAmount          Decimal?            @default(0) @db.Decimal(15, 2)
  totalBeforeTax     Decimal             @db.Decimal(15, 2)
  totalAmount        Decimal             @db.Decimal(15, 2)
  cancelledAt        DateTime?
  cancelledBy        String?             @db.VarChar(20)
  createdBy          String              @db.VarChar(20)
  updatedBy          String              @db.VarChar(20)
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  purchaseOrderItems PurchaseOrderItem[]
  purchaseReturns    PurchaseReturn[]
  PurchaseReceipt    PurchaseReceipt[]

  @@id([docNo, orgCode])
}

enum PurchaseOrderStatus {
  Open
  OnProgress
  Completed
  Cancelled
}

model PurchaseOrderItem {
  docNo               String                @db.VarChar(40)
  lineNo              Int
  desc                String?
  purchaseOrder       PurchaseOrder         @relation(fields: [docNo, orgCode], references: [docNo, orgCode])
  productCode         String
  product             Product               @relation(fields: [productCode, orgCode], references: [productCode, orgCode])
  packagingCode       String                @db.VarChar(10)
  productPackaging    ProductPackaging      @relation(fields: [productCode, packagingCode, orgCode], references: [productCode, packagingCode, orgCode])
  qty                 Decimal               @db.Decimal(15, 2)
  unitPrice           Decimal               @db.Decimal(15, 2)
  unitQty             Decimal               @db.Decimal(15, 2)
  unitCode            String                @db.VarChar(10)
  unit                Unit                  @relation(fields: [unitCode, orgCode], references: [unitCode, orgCode])
  totalUnitQty        Decimal               @db.Decimal(15, 2)
  amount              Decimal               @db.Decimal(15, 2)
  orgCode             String                @db.VarChar(20)
  org                 Org                   @relation(fields: [orgCode], references: [orgCode])
  purchaseReturnItems PurchaseReturnItem[]
  purchaseReceiptItem PurchaseReceiptItem[]

  @@id([docNo, lineNo, orgCode])
}

model PurchaseReturn {
  docNo               String               @db.VarChar(40)
  date                DateTime             @db.Date
  notes               String               @db.Text
  orgCode             String               @db.VarChar(20)
  org                 Org                  @relation(fields: [orgCode], references: [orgCode])
  purchaseOrderDocNo  String               @db.VarChar(20)
  totalBeforeTax      Decimal              @db.Decimal(15, 2)
  totalAmount         Decimal              @db.Decimal(15, 2)
  purchaseOrder       PurchaseOrder        @relation(fields: [purchaseOrderDocNo, orgCode], references: [docNo, orgCode])
  createdBy           String               @db.VarChar(20)
  updatedBy           String               @db.VarChar(20)
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  deletedAt           DateTime?
  purchaseReturnItems PurchaseReturnItem[]

  @@id([docNo, orgCode])
}

model PurchaseReturnItem {
  docNo                          String
  lineNo                         Int
  purchaseReturn                 PurchaseReturn    @relation(fields: [docNo, orgCode], references: [docNo, orgCode])
  purchaseOrderItem              PurchaseOrderItem @relation(fields: [docNo, lineNo, orgCode], references: [docNo, lineNo, orgCode])
  qty                            Decimal           @db.Decimal(15, 2)
  unitPrice                      Decimal           @db.Decimal(15, 2)
  orgCode                        String            @db.VarChar(20)
  org                            Org               @relation(fields: [orgCode], references: [orgCode])
  purchaseOrderItemDocNo         String            @db.VarChar(40)
  purchaseOrderItemProductCode   String            @db.VarChar(20)
  purchaseOrderItemPackagingCode String            @db.VarChar(10)
  purchaseOrderItemOrgCode       String            @db.VarChar(20)

  @@id([docNo, lineNo, orgCode])
}

model StockTransfer {
  docNo              String
  date               DateTime            @db.Date
  warehouseFrom      Warehouse           @relation(name: "warehouseOrigin", fields: [fromWarehouseCode, orgCode], references: [warehouseCode, orgCode])
  warehouseTo        Warehouse           @relation(name: "warehouseDestination", fields: [toWarehouseCode, orgCode], references: [warehouseCode, orgCode])
  fromWarehouseCode  String
  toWarehouseCode    String
  status             String
  org                Org                 @relation(fields: [orgCode], references: [orgCode])
  orgCode            String
  notes              String              @db.Text
  driverName         String?
  truckCode          String
  truck              Truck               @relation(fields: [truckCode, orgCode], references: [truckCode, orgCode])
  cancelledAt        DateTime?
  cancelledBy        String?             @db.VarChar(40)
  createdBy          String              @db.VarChar(20)
  updatedBy          String              @db.VarChar(20)
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  deletedAt          DateTime?
  stockTransferItems StockTransferItem[]

  @@id([docNo, orgCode])
}

model StockTransferItem {
  docNo            String           @db.VarChar(40)
  stockTransfer    StockTransfer    @relation(fields: [docNo, orgCode], references: [docNo, orgCode])
  lineNo           Int
  productCode      String
  product          Product          @relation(fields: [productCode, orgCode], references: [productCode, orgCode])
  packagingCode    String           @db.VarChar(10)
  productPackaging ProductPackaging @relation(fields: [productCode, packagingCode, orgCode], references: [productCode, packagingCode, orgCode])
  qty              Decimal          @db.Decimal(15, 2)
  unitQty          Decimal          @db.Decimal(15, 2)
  totalUnitQty     Decimal          @db.Decimal(15, 2)
  unitCode         String           @db.VarChar(10)
  org              Org              @relation(fields: [orgCode], references: [orgCode])
  orgCode          String           @db.VarChar(20)

  @@id([docNo, lineNo, orgCode])
}

model StockTransferReceipt {
  docNo       String   @db.VarChar(40)
  receiptTime DateTime
  org         Org      @relation(fields: [orgCode], references: [orgCode])
  orgCode     String   @db.VarChar(20)
  createdBy   String   @db.VarChar(20)
  updatedBy   String   @db.VarChar(20)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  StockTransferReceiptItem StockTransferReceiptItem[]

  @@id([docNo, orgCode])
}

model StockTransferReceiptItem {
  docNo                String               @db.VarChar(40)
  lineNo               Int
  org                  Org                  @relation(fields: [orgCode], references: [orgCode])
  orgCode              String               @db.VarChar(20)
  stockTransferReceipt StockTransferReceipt @relation(fields: [stockTransferReceiptDocNo, stockTransferReceiptOrgCode], references: [docNo, orgCode])
  receiptTime          DateTime
  createdBy            String               @db.VarChar(20)
  updatedBy            String               @db.VarChar(20)
  createdAt            DateTime             @default(now())
  updatedAt            DateTime             @updatedAt

  stockTransferReceiptDocNo   String @db.VarChar(40)
  stockTransferReceiptOrgCode String @db.VarChar(20)

  @@id([docNo, lineNo, orgCode])
}

model PurchaseReceipt {
  docNo                String                @db.VarChar(40)
  deliveryNoteNo       String                @db.VarChar(40)
  purchaseOrderDocNo   String                @db.VarChar(40)
  purchaseOrder        PurchaseOrder         @relation(fields: [purchaseOrderDocNo, orgCode], references: [docNo, orgCode])
  warehouseCode        String                @db.VarChar(20)
  warehouse            Warehouse             @relation(fields: [warehouseCode, orgCode], references: [warehouseCode, orgCode])
  date                 DateTime              @db.Date
  status               PurchaseReceiptStatus @default(Open)
  memo                 String?
  updatedBy            String                @db.VarChar(20)
  createdBy            String                @db.VarChar(20)
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
  org                  Org                   @relation(fields: [orgCode], references: [orgCode])
  orgCode              String                @db.VarChar(20)
  purchaseReceiptItems PurchaseReceiptItem[]
  purchaseInvoices     PurchaseInvoice[]

  @@id([docNo, orgCode])
}

enum PurchaseReceiptStatus {
  Open
  OnProgress
  Completed
  Cancelled
}

model PurchaseReceiptItem {
  docNo                String                @db.VarChar(40)
  lineNo               Int
  purchaseReceipt      PurchaseReceipt       @relation(fields: [docNo, orgCode], references: [docNo, orgCode])
  purchaseOrderDocNo   String                @db.VarChar(40)
  purchaseOrderLineNo  Int
  productCode          String
  product              Product               @relation(fields: [productCode, orgCode], references: [productCode, orgCode])
  packaging            Packaging             @relation(fields: [packagingCode, orgCode], references: [packagingCode, orgCode])
  packagingCode        String                @db.VarChar(10)
  purchaseOrderItem    PurchaseOrderItem     @relation(fields: [purchaseOrderDocNo, purchaseOrderLineNo, orgCode], references: [docNo, lineNo, orgCode])
  batchNo              String                @default("")
  qty                  Decimal               @db.Decimal(15, 2)
  unitCode             String                @db.VarChar(10)
  unit                 Unit                  @relation(fields: [unitCode, orgCode], references: [unitCode, orgCode])
  unitQty              Decimal               @db.Decimal(15, 2)
  totalUnitQty         Decimal               @db.Decimal(15, 2)
  org                  Org                   @relation(fields: [orgCode], references: [orgCode])
  orgCode              String                @db.VarChar(20)
  purchaseInvoiceItems PurchaseInvoiceItem[]

  @@id([docNo, lineNo, orgCode])
}

model PurchaseInvoice {
  docNo                 String                  @db.VarChar(20)
  date                  DateTime                @db.Date
  dueDate               DateTime                @db.Date
  org                   Org                     @relation(fields: [orgCode], references: [orgCode])
  orgCode               String
  status                PurchaseInvoiceStatus
  purchaseReceiptDocNo  String                  @db.VarChar(40)
  purchaseReceipt       PurchaseReceipt         @relation(fields: [purchaseReceiptDocNo, orgCode], references: [docNo, orgCode])
  supplierCode          String?                 @db.VarChar(20)
  supplier              Supplier?               @relation(fields: [supplierCode, orgCode], references: [supplierCode, orgCode])
  taxRate               Float?                  @default(0)
  taxAmount             Decimal?                @default(0) @db.Decimal(15, 2)
  otherFees             Decimal?                @default(0) @db.Decimal(15, 2)
  withholdingTaxRate    Float?                  @default(0)
  withholdingTaxAmount  Decimal?                @db.Decimal(15, 2)
  totalBeforeTax        Decimal                 @db.Decimal(15, 2)
  totalAmount           Decimal                 @db.Decimal(15, 2)
  memo                  String?                 @db.Text
  paidAmount            Decimal                 @default(0) @db.Decimal(15, 2)
  unpaidAmount          Decimal                 @default(0) @db.Decimal(15, 2)
  cancelledAt           DateTime?
  cancelledBy           String?
  updatedBy             String                  @db.VarChar(20)
  createdBy             String                  @db.VarChar(20)
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  purchaseInvoiceItems  PurchaseInvoiceItem[]
  purchasePaymentDetail PurchasePaymentDetail[]

  @@id([docNo, orgCode])
}

model PurchaseInvoiceItem {
  docNo                String              @db.VarChar(40)
  lineNo               Int
  purchaseInvoice      PurchaseInvoice     @relation(fields: [docNo, orgCode], references: [docNo, orgCode])
  purchaseReceiptDocNo String              @db.VarChar(40)
  purchaseReceiptItem  PurchaseReceiptItem @relation(fields: [purchaseReceiptDocNo, lineNo, orgCode], references: [docNo, lineNo, orgCode])
  productCode          String
  packaging            Packaging           @relation(fields: [packagingCode, orgCode], references: [packagingCode, orgCode])
  product              Product             @relation(fields: [productCode, orgCode], references: [productCode, orgCode])
  packagingCode        String              @db.VarChar(10)
  qty                  Decimal             @db.Decimal(15, 2)
  unitPrice            Decimal             @db.Decimal(15, 2)
  amount               Decimal             @db.Decimal(15, 2)
  totalUnitQty         Decimal             @db.Decimal(15, 2)
  unitQty              Decimal             @db.Decimal(15, 2)
  unitCode             String              @db.VarChar(10)
  org                  Org                 @relation(fields: [orgCode], references: [orgCode])
  orgCode              String              @db.VarChar(20)

  @@id([docNo, lineNo, orgCode])
}

enum PurchaseInvoiceStatus {
  Open
  Partial
  Paid
  Cancelled
}

model PurchasePayment {
  docNo                  String                  @db.VarChar(40)
  refNo                  String                  @db.VarChar(40)
  date                   DateTime                @db.Date
  currencyCode           String                  @db.VarChar(3)
  currency               Currency                @relation(fields: [currencyCode, orgCode], references: [currencyCode, orgCode])
  supplier               Supplier                @relation(fields: [supplierCode, orgCode], references: [supplierCode, orgCode])
  exchangeRate           Decimal                 @db.Decimal(15, 2)
  taxRate                Float?                  @default(0)
  taxAmount              Decimal?                @default(0) @db.Decimal(15, 2)
  withholdingTaxRate     Float?                  @default(0)
  withholdingTaxAmount   Decimal?                @default(0) @db.Decimal(15, 2)
  memo                   String
  totalBeforeTax         Decimal                 @db.Decimal(15, 2)
  totalAmount            Decimal                 @db.Decimal(15, 2)
  orgCode                String                  @db.VarChar(20)
  org                    Org                     @relation(fields: [orgCode], references: [orgCode])
  cancelledAt            DateTime?
  cancelledBy            String?                 @db.VarChar(20)
  createdBy              String                  @db.VarChar(20)
  updatedBy              String                  @db.VarChar(20)
  createdAt              DateTime                @default(now())
  updatedAt              DateTime                @updatedAt
  deletedAt              DateTime?
  purchasePaymentDetails PurchasePaymentDetail[]
  supplierCode           String                  @db.VarChar(20)

  @@id([docNo, orgCode])
}

model PurchasePaymentDetail {
  docNo                String          @db.VarChar(40)
  purchaseInvoiceDocNo String          @db.VarChar(40)
  purchasePayment      PurchasePayment @relation(fields: [docNo, orgCode], references: [docNo, orgCode])
  purchaseInvoice      PurchaseInvoice @relation(fields: [purchaseInvoiceDocNo, orgCode], references: [docNo, orgCode])
  amount               Decimal         @db.Decimal(15, 2)
  org                  Org             @relation(fields: [orgCode], references: [orgCode])
  orgCode              String          @db.VarChar(20)

  @@id([docNo, purchaseInvoiceDocNo])
}

model SKTD {
  docNo        String   @db.VarChar(40)
  customerCode String   @db.VarChar(40)
  customer     Customer @relation(fields: [customerCode, orgCode], references: [customerCode, orgCode])
  validFrom    DateTime @db.Date
  validUntil   DateTime @db.Date
  type         SKTDType
  totalVolume  Decimal? @db.Decimal(15, 2)
  updatedBy    String   @db.VarChar(20)
  createdBy    String   @db.VarChar(20)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  org          Org      @relation(fields: [orgCode], references: [orgCode])
  orgCode      String   @db.VarChar(20)

  @@id([docNo, orgCode])
}

enum SKTDType {
  VOLUMES
  PRODUCTS
}

model SKTDItem {
  docNo           String  @db.VarChar(40)
  lineNo          Int
  productCode     String
  product         Product @relation(fields: [productCode, orgCode], references: [productCode, orgCode])
  totalVolume     Decimal @db.Decimal(15, 2)
  remainingVolume Decimal @db.Decimal(15, 2)
  org             Org     @relation(fields: [orgCode], references: [orgCode])
  orgCode         String  @db.VarChar(20)

  @@id([docNo, productCode, orgCode])
}

model SKTDUsage {
  docNo                String         @db.VarChar(40)
  salesOrderItems      SalesOrderItem @relation(fields: [salesOrderDocNo, salesOrderItemLineNo, orgCode], references: [docNo, lineNo, orgCode])
  salesOrderItemLineNo Int
  salesOrderDocNo      String         @db.VarChar(20)
  qty                  Decimal        @db.Decimal(15, 2)
  updatedBy            String         @db.VarChar(20)
  createdBy            String         @db.VarChar(20)
  createdAt            DateTime       @default(now())
  updatedAt            DateTime       @updatedAt
  org                  Org            @relation(fields: [orgCode], references: [orgCode])
  orgCode              String         @db.VarChar(20)

  @@id([docNo, salesOrderDocNo, orgCode])
}
